<?php

/**
 * @file
 * Unit tests for the short_answer Module.
 */

/**
 * Test class for short answer.
 */
class ShortAnswerUnitTest extends QuizQuestionTestCase {

  var $question_node_type = 'short_answer';

  public static function getInfo() {
    return array(
      'name' => t('Short answer'),
      'description' => t('Unit test for Short answers question type.'),
      'group' => t('Quiz'),
    );
  }

  function setUp() {
    parent::setUp(array('short_answer'));
  }

  /**
   * Test case insensitive graded questions.
   */
  public function testGradeAnswerInsensitive() {
    // Login as our privileged user.
    $this->drupalLogin($this->admin);

    $question_node = $this->testCreateQuizQuestion(array(
      'correct_answer_evaluation' => ShortAnswerQuestion::ANSWER_INSENSITIVE_MATCH,
      'correct_answer' => 'the Zero One Infinity rule',
    ));

    $quiz = $this->linkQuestionToQuiz($question_node);
  }

  /**
   * Test case sensitive graded questions.
   */
  public function testGradeAnswerSensitive() {
    // Login as our privileged user.
    $this->drupalLogin($this->admin);

    $question_node = $this->testCreateQuizQuestion(array(
      'correct_answer_evaluation' => ShortAnswerQuestion::ANSWER_MATCH,
      'correct_answer' => 'the Zero One Infinity rule',
    ));
    $quiz = $this->linkQuestionToQuiz($question_node);
  }

  /**
   * Test regex graded questions.
   */
  public function testGradeAnswerRegex() {
    // Login as our privileged user.
    $this->drupalLogin($this->admin);

    $question_node = $this->testCreateQuizQuestion(array(
      'correct_answer_evaluation' => ShortAnswerQuestion::ANSWER_REGEX,
      'correct_answer' => '/Zero One Infinity rule/',
    ));
    $quiz = $this->linkQuestionToQuiz($question_node);
  }

  /**
   * Test manually graded questions.
   */
  public function testGradeAnswerManual() {
    // Login as our privileged user.
    $this->drupalLogin($this->admin);

    $question_node = $this->testCreateQuizQuestion(array(
      'correct_answer_evaluation' => ShortAnswerQuestion::ANSWER_MANUAL,
      'correct_answer' => 'the Zero One Infinity rule',
    ));
    $quiz = $this->linkQuestionToQuiz($question_node);
  }

  /**
   * Test the question feedback.
   */
  function testQuestionFeedback() {
    // Login as our privileged user.
    $this->drupalLogin($this->admin);

    $question_node = $this->testCreateQuizQuestion(array(
      'correct_answer_evaluation' => ShortAnswerQuestion::ANSWER_INSENSITIVE_MATCH,
      'correct_answer' => 'This is the correct answer.',
    ));
    $quiz = $this->linkQuestionToQuiz($question_node);

    // Login as non-admin.
    $this->drupalLogin($this->user);

    // Take the quiz.
    $this->drupalGet("node/$quiz_node->nid/take");

    // Test incorrect question. No feedback, no answer.
    $quiz->feedback_time == QUIZ_FEEDBACK_NEVER;
    $quiz->display_feedback = 0;
    node_save($quiz);
    $this->drupalGet("node/$quiz_node->nid/take");
    $this->drupalPost(NULL, array(
      "question[$question_node->nid]" => 'This is an incorrect answer.',
      ), t('Finish'));
    $this->assertNoText('Answer hidden');
    $this->assertNoText('This is an incorrect answer.');
    $this->assertNoText('This is the correct answer.');

    // Test incorrect question. Feedback, no answer.
    $quiz_node->feedback_time = QUIZ_FEEDBACK_END;
    node_save($quiz_node);
    $this->drupalGet("node/$quiz_node->nid/take");
    $this->drupalPost(NULL, array(
      "question[$question_node->nid]" => 'This is an incorrect answer.',
      ), t('Finish'));
    $this->assertText('Answer hidden');
    $this->assertText('This is an incorrect answer.');
    $this->assertNoText('This is the correct answer.');

    // Test incorrect question. Show answer.
    $quiz_node->display_feedback = 1;
    node_save($quiz_node);
    $this->drupalGet("node/$quiz_node->nid/take");
    $this->drupalPost(NULL, array(
      "question[$question_node->nid]" => 'This is an incorrect answer.',
      ), t('Finish'));
    $this->assertNoText('Answer hidden');
    $this->assertText('This is an incorrect answer.');
    $this->assertText('This is the correct answer.');
  }

  /**
   * Test adding and taking a truefalse question.
   */
  function testCreateQuizQuestion($settings = array()) {
    // Login as our privileged user.
    $this->drupalLogin($this->admin);

    $question_node = $this->drupalCreateNode(array(
      'type' => $this->question_node_type,
      'title' => 'SA 1 title',
      'body' => array(LANGUAGE_NONE => array(array('value' => 'SA 1 body text'))),
      ) + $settings);

    return $question_node;
  }

}
