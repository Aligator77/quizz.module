<?php

/**
 * @file
 * Unit tests for the quiz question Module.
 */

/**
 * Base test class for Quiz questions.
 */
abstract class QuizQuestionTestCase extends DrupalWebTestCase {

  /**
   * Set up a question test case.
   *
   * @param array $modules
   *   Array of modules to enable.
   * @param array $more_admin_permissions
   *   Array of admin permissions to add.
   * @param array $more_user_permissions
   *   Array of user permissions to add.
   */
  function setUp($modules, $more_admin_permissions = array(), $more_user_permissions = array()) {
    parent::setUp($modules);

    $admin_permission = array_merge(array(
      'access quiz',
      "create {$this->question_node_type} content",
      'create quiz content',
      "edit any {$this->question_node_type} content",
      'edit any quiz content',
      'edit question titles',
      ), $more_admin_permissions);

    $user_permission = array_merge(array(
      'access quiz',
      ), $more_user_permissions);


    $this->admin = $this->drupalCreateUser($admin_permission);
    $this->user = $this->drupalCreateUser($user_permission);
  }

  /**
   * Test the quiz question implementation.
   */
  public function testQuizQuestionImplementation() {
    $qq = _quiz_question_get_implementations();
    $this->assertTrue(isset($qq[$this->question_node_type]), t('Check that the question implementation is correct.'));
  }

  /**
   * Link a question to a new or provided quiz.
   */
  public function linkQuestionToQuiz($question_node, $quiz_node = NULL) {
    if (!$quiz_node) {
      // Create a new quiz with defaults.
      $quiz_node = $this->drupalCreateNode(array(
        'type' => 'quiz',
      ));
    }

    $question_node->quiz_nid = $quiz_node->nid;
    $question_node->quiz_vid = $quiz_node->vid;
    $qq = _quiz_question_get_instance($question_node);
    $qq->saveRelationships();
    return $quiz_node;
  }

}
