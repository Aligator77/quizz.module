<?php

/**
 * @file
 * Unit tests for the long_answer Module.
 */

/**
 * Test class for long answer.
 */
class LongAnswerUnitTest extends QuizQuestionTestCase {

  var $question_node_type = 'long_answer';

  public static function getInfo() {
    return array(
      'name' => t('Long answer'),
      'description' => t('Unit test for Long answers question type.'),
      'group' => t('Quiz'),
    );
  }

  function setUp() {
    parent::setUp(array('long_answer'), array('score any quiz'));
  }

  /**
   * Test manually graded questions.
   *
   * Note: we use two questions here to make sure the grading form is handled
   * correctly.
   */
  public function testGradeAnswerManual() {
    $this->drupalLogin($this->admin);

    $question_node1 = $this->testCreateQuizQuestion();
    $quiz_node = $this->linkQuestionToQuiz($question_node1);

    $question_node2 = $this->testCreateQuizQuestion();
    $this->linkQuestionToQuiz($question_node2, $quiz_node);

    // Test correct.
    $this->drupalLogin($this->user);
    $this->drupalGet("node/$quiz_node->nid/take");
    $this->drupalPost(NULL, array(
      "question[$question_node1->nid]" => 'the answer is the zero one infinity rule',
      "question[$question_node2->nid]" => 'the number two really is ridiculous',
      ), t('Finish'));
    $this->assertText('Your score: 0%');
    $this->assertText('Score ? of 10');
    $this->assertText('This answer has not yet been scored.');
    $this->assertNoFieldByName('0[score]');
    $this->assertNoFieldByName('1[score]');
    $url_of_result = $this->getUrl();

    // Test grading the question.
    $this->drupalLogin($this->admin);
    $this->drupalGet($url_of_result);
    $this->assertFieldByName('0[score]');
    $this->assertFieldByName('1[score]');
    $this->drupalPost(NULL, array(
      "0[score]" => 2,
      "1[score]" => 3,
      ), t('Save Score'));
    $this->assertText('The scoring data you provided has been saved.');

    // Test the score is visible to the user.
    $this->drupalLogin($this->user);
    $this->drupalGet($url_of_result);
    $this->assertText('You got 5 of 10 possible points.');
    $this->assertText('Your score: 50%');
    $this->assertText('Score 2 of 5');
    $this->assertText('Score 3 of 5');
  }

  /**
   * Test the question feedback.
   */
  function testQuestionFeedback() {
    // Login as our privileged user.
    $this->drupalLogin($this->admin);

    $question_node = $this->testCreateQuizQuestion(array(
      'correct_answer_evaluation' => LongAnswerQuestion::ANSWER_INSENSITIVE_MATCH,
      'correct_answer' => 'This is the correct answer.',
    ));
    $quiz_node = $this->linkQuestionToQuiz($question_node);

    // Login as non-admin.
    $this->drupalLogin($this->user);

    // Take the quiz.
    $this->drupalGet("node/$quiz_node->nid/take");

    // Test incorrect question. No feedback, no answer.
    $quiz_node->feedback_time = QUIZ_FEEDBACK_NEVER;
    $quiz_node->display_feedback = 0;
    node_save($quiz_node);
    $this->drupalGet("node/$quiz_node->nid/take");
    $this->drupalPost(NULL, array(
      "question[$question_node->nid]" => 'This is an incorrect answer.',
      ), t('Finish'));
    $this->assertNoText('Answer hidden');
    $this->assertNoText('This is an incorrect answer.');
    $this->assertNoText('This is the correct answer.');

    // Test incorrect question. Feedback, no answer.
    $quiz_node->feedback_time = QUIZ_FEEDBACK_END;
    node_save($quiz_node);
    $this->drupalGet("node/$quiz_node->nid/take");
    $this->drupalPost(NULL, array(
      "question[$question_node->nid]" => 'This is an incorrect answer.',
      ), t('Finish'));
    $this->assertText('Answer hidden');
    $this->assertText('This is an incorrect answer.');
    $this->assertNoText('This is the correct answer.');

    // Test incorrect question. Show answer.
    $quiz_node->display_feedback = 1;
    node_save($quiz_node);
    $this->drupalGet("node/$quiz_node->nid/take");
    $this->drupalPost(NULL, array(
      "question[$question_node->nid]" => 'This is an incorrect answer.',
      ), t('Finish'));
    $this->assertNoText('Answer hidden');
    $this->assertText('This is an incorrect answer.');
    $this->assertText('This is the correct answer.');
  }

  /**
   * Test adding and taking a truefalse question.
   */
  function testCreateQuizQuestion($settings = NULL) {
    if (!$settings) {
      $settings = array(
        'rubric' => 'LA 1 rubric.',
      );
    }

    // Login as our privileged user.
    $this->drupalLogin($this->admin);

    $question_node = $this->drupalCreateNode(array(
      'type' => $this->question_node_type,
      'title' => 'LA 1 title',
      'body' => array(LANGUAGE_NONE => array(array('value' => 'LA 1 body text.'))),
      ) + $settings);

    return $question_node;
  }

}
