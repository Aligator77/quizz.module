<?php

use Drupal\quiz\Entity\QuizEntity;
use Drupal\quiz\Entity\QuizEntityType;

/**
 * Test aspects of quiz creation including global and user defaults.
 */
class QuizEntityTest extends QuizTestCase {

  public function testInitQuizTypeEntity() {
    $type = entity_create('quiz_type', array());
    $this->assertTrue($type instanceof QuizEntityType, 'Quiz type entity is created correctly using entity_create().');
  }

  public function testCheckDefaultQuizType() {
    $types = entity_load('quiz_type', array('quiz'));
    $quiz_type = reset($types);
    $this->assertTrue($quiz_type instanceof QuizEntityType, 'Default quiz type is created.');
  }

  public function testInitQuizEntity() {
    $quiz = entity_create('quiz_entity', array('type' => 'quiz'));
    $this->assertTrue($quiz instanceof QuizEntity, 'Quiz entity is created correctly using entity_create().');

    // Create entity
    $quiz->changed = $quiz->created = time();
    $quiz->title = 'Demo quiz';
    $quiz->uid = 1;
    entity_save('quiz_entity', $quiz);
    $this->assertNotNull($quiz, 'Quiz entity is created successully.');

    // Update entity
    $quiz->title = 'Updated demo quiz';
    entity_save('quiz_entity', $quiz);

    // Reload entity
    $quiz = entity_load_single('quiz_entity', $quiz->identifier());
    $this->assertEqual('Updated demo quiz', $quiz->title, 'Quiz entity is updated.');

    entity_delete('quiz_entity', $quiz->identifier());
    $this->assertTrue(empty(entity_load_single('quiz_entity', $quiz->identifier())));
  }

}
