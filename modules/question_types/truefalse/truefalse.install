<?php

/**
 * @file
 * The installer file for truefalse question type. *
 */

/**
 * Implements hook_install().
 */
function truefalse_install() {
  variable_set('node_options_truefalse', array('status'));
}

/**
 * Implements hook_schema().
 */
function truefalse_schema() {
  // Extensions to nodes for T/F
  $schema['quiz_truefalse'] = array(
      'fields'      => array(
          'qid'            => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE,),
          'vid'            => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE,),
          'correct_answer' => array('type' => 'int', 'unsigned' => TRUE, 'size' => 'tiny', 'default' => 0, 'description' => 'The correct answer for the user to give. 1 for true.'),
      ),
      'primary key' => array('vid', 'qid'),
  );

  // Place to store user answers for T/F questions
  $schema['quiz_truefalse_user_answers'] = array(
      'fields'      => array(
          'question_qid' => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE),
          'question_vid' => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE),
          'result_id'    => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE),
          'answer'       => array('type' => 'int', 'unsigned' => TRUE, 'size' => 'tiny', 'default' => 0),
          'score'        => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 0),
      ),
      'primary key' => array('result_id', 'question_qid', 'question_vid'),
  );

  return $schema;
}

/**
 * Implements hook_quiz_question_upgrade_schema_node_to_entity().
 */
function truefalse_quiz_question_upgrade_schema_node_to_entity() {
  if (db_table_exists('quiz_truefalse_node')) {
    $spec = array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE);
    db_rename_table('quiz_truefalse_node', 'quiz_truefalse');
    db_change_field('quiz_truefalse', 'nid', 'qid', $spec);
    db_change_field('quiz_truefalse_user_answers', 'question_nid', 'question_qid', $spec);
  }
}

/**
 * Implements hook_quiz_question_upgrade_pre_drop_temp_columns().
 */
function truefalse_quiz_question_upgrade_pre_drop_temp_columns() {
  // quiz_truefalse
  db_query(
    "UPDATE {quiz_truefalse} as tf"
    . " INNER JOIN {quiz_question_revision} qr ON tf.vid = qr.node_vid"
    . " SET tf.qid = qr.qid, tf.vid = qr.vid"
    . " WHERE 1"
  );

  // quiz_truefalse_user_answers
  db_query(
    "UPDATE {quiz_truefalse_user_answers} as ua"
    . " INNER JOIN {quiz_question_revision} qr ON ua.question_vid = qr.node_vid"
    . " SET ua.question_qid = qr.qid, ua.question_vid = qr.vid"
    . " WHERE 1"
  );
}

function truefalse_update_7600() {
  require_once drupal_get_path('module', 'quiz_question') . '/quiz_question.install';
  return quiz_question_update_7600();
}
